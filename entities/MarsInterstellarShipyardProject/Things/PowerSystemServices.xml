<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b12"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="0"
 schemaVersion="1050"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2019-10-10T09:26:06.889Z"
         name="PowerSystemServices"
         projectName="MarsInterstellarShipyardProject"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="EnterLowPowerState">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.Admin"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="ExitLowPowerState">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.Admin"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="EstHrsToPowerOutrage">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="GetPowerProducers">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="GetPowerConsumers">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Power.General"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="MarsInterstellarShipyardOrg:Power"
                     type="OrganizationalUnit"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="CalculateAveragePowerConsumed">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="consumer1"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="consumer2"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="consumer3"
                             ordinal="3"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="CheckEnoughPower12Hours">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="powerConsumed"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="powerProduced"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="powerStored"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="EnterLowPowerState">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="EstHrsToPowerOutrage">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="ExitLowPowerState">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="hrsNoLowPowerState"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetPowerConsumers">
                        <ResultType
                         aspect.dataShape="GetPowerConsumersDS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetPowerProducers">
                        <ResultType
                         aspect.dataShape="GetPowerProducersDS"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="CalculateAveragePowerConsumed">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = (consumer1 + consumer2 + consumer3) / 3;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="CheckEnoughPower12Hours">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = false; 
                                        if  ((((powerProduced - powerConsumed) + powerStored) / 1000) >= 12) 
                                           result = true;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="EnterLowPowerState">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*********************************************************************
                                        Get the entity names
                                        *********************************************************************/
                                        var shipyardEntityName = "Shipyard";
                                        
                                        /*********************************************************************
                                        * If already in low power state, do nothing
                                        * except set result message
                                        *********************************************************************/
                                        var nowDate = Date.now();
                                        if (me.LowPowerState) {
                                            message = "Attemped to enter low power state while already " +
                                                "in low power state.  No action taken.";
                                        }
                                        else {
                                        //if date is later than NoLowPowerState, set low power state to true
                                        //Set result message
                                            if (nowDate > Things[shipyardEntityName].NoLowPowerStateUntil) {
                                                Things[shipyardEntityName].LowPowerState=true;
                                                message = "Entered low power state";
                                            }
                                            else {
                                        //else, don't enter low power state because doing so is blocked by NoLowPowerStateUntil
                                        //Set result message.
                                               message = "Cannot enter low power state until " +
                                                    Things[shipyardEntityName].NoLowPowerStateUntil +
                                                    "Try again later or reset Shipyard.";
                                            }
                                        }
                                        /*********************************************************************
                                        * send message to result string and script log
                                        *********************************************************************/
                                        logger.warn(message);
                                        result = message;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="EstHrsToPowerOutrage">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        try {
                                        /************************************************************************
                                        Get the shipyard name
                                        ************************************************************************/
                                        var shipyardEntityName = "Shipyard";
                                        
                                        /************************************************************************
                                        * Start by doing rollup to get up-to-the-second data
                                        ************************************************************************/
                                        
                                        Things[shipyardEntityName].Rollup();
                                        
                                        /************************************************************************
                                        * Calculate hours to dead battery.
                                        * powerDeficit is (PowerConsumed - PowerProduced)
                                        * PowerStored / powerDeficit = hrs to dead battery
                                        ************************************************************************/
                                        
                                        var powerDeficit = Things[shipyardEntityName].PowerConsumed - Things[shipyardEntityName].PowerProduced;
                                        var hrsToPowerOut;
                                        if (powerDeficit <= 0) { //Set to 10,000 if there is no powerDeficit.
                                            hrsToPowerOut = 10000;
                                        }
                                        else { // Calculate hours if deficit is positive
                                            hrsToPowerOut = Things[shipyardEntityName].PowerStored / powerDeficit;
                                        }
                                        result = hrsToPowerOut;
                                        } catch (err) {
                                         logger.error(err + " at line " + err.lineNumber);    
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="ExitLowPowerState">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        /*********************************************************************
                                        Get the shipyard entity name
                                        *********************************************************************/
                                        var shipyardEntityName = "Shipyard";
                                        
                                        /*********************************************************************
                                        * If system is not in low power state, don't change state
                                        * and begin creation of result message
                                        *********************************************************************/
                                        var message;
                                        if (Things[shipyardEntityName].LowPowerState == false ) {
                                            message = "Attempted to exit low power state while " +
                                                "shipyard is not in a low power state. ";
                                        }
                                        else {
                                        
                                        //Otherwise, set low power state to false and begin creation of result message
                                            Things[shipyardEntityName].LowPowerState = false;
                                            message = "System removed from low power state. ";
                                        }
                                        /*********************************************************************
                                        * Set hrsNoLowPowerState to current date/time + input
                                        * parameter.  Complete message
                                        *********************************************************************/
                                        var tempDate = Date.now();
                                        tempDate = dateAddHours(tempDate, hrsNoLowPowerState);
                                        Things[shipyardEntityName].NoLowPowerStateUntil = tempDate;
                                        message = message +
                                            " System will not enter low power state again before " +
                                            Things[shipyardEntityName].NoLowPowerStateUntil;
                                        	
                                        /*********************************************************************
                                        * Send message to result string and script log.
                                        *********************************************************************/
                                        logger.warn(message);
                                        result = message;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetPowerConsumers">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // result: INFOTABLE dataShape: "RootEntityList"
                                        var result =  ThingShapes["PowerConsumerTS"].GetImplementingThingsWithData();
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetPowerProducers">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // result: INFOTABLE dataShape: "RootEntityList"
                                        var result =  ThingShapes["PowerProducerTS"].GetImplementingThingsWithData();
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
